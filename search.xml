<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[使用IntelliJ IDEA开发Spring MVC HelloWorld]]></title>
      <url>%2F2017%2F04%2F25%2F%E4%BD%BF%E7%94%A8IntelliJ%20IDEA%E5%BC%80%E5%8F%91Spring%20MVC%20HelloWorld%2F</url>
      <content type="text"><![CDATA[开发环境 JDK1.8.0_131 Tomcat 8.5.13 Intellij IDEA 1. 创建工程打开IntelliJ IDEA 新建一个project，选择Spring MVC,Project name写: SpringHello, 然后点击Finish，等待download finish. 创建完成的目录： 2. 配置Web.xml首先打开web/WEB-INF目录下的web.xml文件，如下，把url-pattern的值改为/，用于拦截请求（url-pattern为 / ，说明拦截所有请求,网上有说配置为/*的，我这样配置会出错），并交由Spring MVC的后台控制器来处理。这一项配置是必须的。 12345678910111213141516171819202122&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1"&gt; &lt;context-param&gt; &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt; &lt;param-value&gt;/WEB-INF/applicationContext.xml&lt;/param-value&gt; &lt;/context-param&gt; &lt;listener&gt; &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt; &lt;/listener&gt; &lt;servlet&gt; &lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt; &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt; &lt;load-on-startup&gt;1&lt;/load-on-startup&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt; &lt;url-pattern&gt;/&lt;/url-pattern&gt; &lt;/servlet-mapping&gt;&lt;/web-app&gt; 3. 编写ControllerMVC框架有model、view、controller三部分组成。model一般为一些基本的Java Bean，view用于进行相应的页面显示，controller用于处理网站的请求。 在项目的src目录创建一个包用于存放Controller, 包的名字为: com.myron.hello，在包下创建一个HelloController类 添加以下代码：123456789101112131415161718192021package com.myron.hello;import org.springframework.stereotype.Controller;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;/** * Created by Myron on 4/25/2017. */@Controller@RequestMapping(value = "/hello", method = RequestMethod.GET)public class HelloController &#123; @RequestMapping(value = "/hello", method = RequestMethod.GET) public String printHello(ModelMap model) &#123; model.addAttribute("msg", "Spring MVC Hello World"); model.addAttribute("name", "yuntao"); return "hello"; &#125;&#125; 解释下上边代码的意思 @Controller注解：采用注解的方式定义该类为处理请求的Controller类； @RequestMapping解：用于定义一个请求映射，value为请求的url，method用以指定该请求类型，一般为get和post，代码中要调用printHello方法，即可访问 hello/hello return “hello”：处理完该请求后返回的页面，此请求返回 hello.jsp页面。 4. 创建View层接下来删除web目录下的index.jsp,在web/WEB-INF中创建一个views目录，然后创建一个hello.jsp文件，添加如下代码： 12345678910&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;$&#123;msg&#125;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;$&#123;msg&#125;&lt;/h1&gt;&lt;span&gt;$&#123;name&#125;&lt;/span&gt;&lt;/body&gt;&lt;/html&gt; 5. 配置xxx-servlet.xml完成上边的步骤之后，在web.xml同级目录下有个dispatcher-servlet.xml的配置文件，他的前缀dispatcher对应上边web.xml中配置的servlet（名称可修改）。 打开dispatcher-servlet.xml是空的，我们需要添加一些配置 首先要指定下controller所在的包，这样spring mvc会扫描其中的注解 1&lt;context:component-scan base-package="com.myron.hello"/&gt; 1234567&lt;!--ViewResolver 视图解析器--&gt;&lt;!--用于支持Servlet、JSP视图解析--&gt;&lt;bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"&gt; &lt;property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/&gt; &lt;property name="prefix" value="/WEB-INF/jsp/"/&gt; &lt;property name="suffix" value=".jsp"/&gt;&lt;/bean&gt; 还需要配置下边两项，静态资源访问，开启注解。 12345&lt;!-- 静态资源(js、image等)的访问 --&gt;&lt;mvc:default-servlet-handler/&gt;&lt;!-- 开启注解 --&gt;&lt;mvc:annotation-driven/&gt; 最后配置完成如下12345678910111213141516171819202122&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"&gt; &lt;context:component-scan base-package="com.myron.hello"/&gt; &lt;!-- 静态资源(js、image等)的访问 --&gt; &lt;mvc:default-servlet-handler/&gt; &lt;!-- 开启注解 --&gt; &lt;mvc:annotation-driven/&gt; &lt;!--ViewResolver 视图解析器--&gt; &lt;!--用于支持Servlet、JSP视图解析--&gt; &lt;bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"&gt; &lt;property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/&gt; &lt;property name="prefix" value="/WEB-INF/jsp/"/&gt; &lt;property name="suffix" value=".jsp"/&gt; &lt;/bean&gt;&lt;/beans&gt; 6.导入Spring和Spring MVC的jar点击工程 –&gt; F4 7.下载standard和jstl包如果没有standard和jstl包会导致： NoClassDefFoundError: javax/servlet/jsp/jstl/core/Config 下载地址 下载解压后将standard和jstl两个包放入web.WEB-INF/lib下即可，如果没有lib可新建一个 打开: http://localhost:8080/hello/hello 就能看到运行成功]]></content>
    </entry>

    
  
  
</search>
